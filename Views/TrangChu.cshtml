@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
	Layout = "Master.cshtml";
	var currentNode = UmbracoContext.Current.PublishedContentRequest.PublishedContent;
	var productsNode = currentNode.Children.FirstOrDefault(x => x.Name == "Sản phẩm");
	const int pageSize = 4;
	int page = 1;
	if (!int.TryParse(Request["page"], out page)) {
		page =1;
	}
	int totalNode = productsNode.Children.Count();
	int totalPages = (int) Math.Ceiling((double) totalNode / pageSize);
	if (page > totalPages) {
		page = totalPages;
	}
	else if (page < 1) {
		page = 1;
	}
	var listItem = productsNode.Children.Skip((page -1) * pageSize).Take(pageSize).ToList();
}

@* the fun starts here *@
 <div class="heading text-center w3l_banner_nav_right" id="w3l_banner_nav_right">
	 <div class="home_info">
		 <div class="background-header">
			 <span class="glyphicon glyphicon-home" aria-hidden="true" ></span>
			 <h4 class="introduction">GIỚI THIỆU</h4>
			 </div>
		<h2><b>Cơ sở Mộc Mỹ Nghệ Tấn Cường</b></h2>
		<h3><i>Hotline: @(currentNode.GetPropertyValue<string>("sodienThoai"))</i></h3>
		<h3><i>Địa Chỉ: @(currentNode.GetPropertyValue<string>("diaChi"))</i></h3><br>
		<p>@Html.Raw(currentNode.GetPropertyValue<string>("noiDung"))</p>
	 </div>
	<!-- List products -->
	<div class="line_bottom"></div>
	<div class="products">
		<h2 class="heading text-center">Danh mục sản phẩm</h2>
		<div class="row">
			<ul>
			@if (listItem != null) {
				foreach( var sanphamitem in listItem) {
					var images = sanphamitem.GetPropertyValue<int>("hinhAnh");
					var image = Umbraco.TypedMedia(images);
					var url = String.Empty;
					if (image != null) {
						url = image.Url;
					}
					<li class="product_item">
						<div class="box-image-text blog">
							<div class="top">
								<div class="image">
									<a href="@sanphamitem.Url"><img data-src="@url" alt="@(sanphamitem.GetPropertyValue<string>("pageTittle"))" class="lazy img-responsive"></a>
								</div>
							</div>
							<div class="content">
								<h4><a href="@sanphamitem.Url">@(sanphamitem.GetPropertyValue<string>("pageTittle"))</a></h4>
								<p class="author-category">Sản xuất tại cơ sở <h4>Tấn Cường</h4>
								</p>
								<p class="intro">@(sanphamitem.GetPropertyValue<string>("moTa"))</p>
								<p class="price">Giá: @(sanphamitem.GetPropertyValue<string>("gia"))</p>
								<p class="read-more"><a href="@sanphamitem.Url" class="btn btn-template-main">Xem thêm</a>
								</p>
							</div>
						</div>
					</li>
					
					<!-- if ((listItem.IndexOf(sanphamitem) == 3 ) || (listItem.IndexOf(sanphamitem) == 7 )){
						<div class="clearfix"></div>
					} -->
				}
			}
			</ul>
		</div>
	</div>
	<!-- End list products -->
	<div class="clearfix"></div>
	@if (totalPages > 1) {
		const int itemsPerGroup = 8;
		var currentGroup = (int) Math.Ceiling((double)page / itemsPerGroup);
		int startItem = (currentGroup -1) * itemsPerGroup;
		int endItem = startItem + itemsPerGroup;
		if (endItem > totalPages) {
			endItem = totalPages;
		}
		<div id="pagingWrapper">
			<nav>
				<ul class="paging">
				@if (page > 1) {
					<li class="number"><a class="pgLnk" href="?page=1" title="@(page-1)"><<</a></li>
				}
				@for (int p = startItem; p < endItem; p++ ) {
					string selected = (p + 1 ==page)? "selected" : String.Empty;
					if (selected.Trim().Length != 0) {
						<li class="number @selected"> <a href="javascript:void(0);" title="@(p+1)"><span class="pgLnk">@(p+1)</span></a> </li>
					}
					else {
						<li class="number @selected"> <a href="?page=@(p+1)" title="@(p+1)"><span class="pgLnk">@(p+1)</span></a></li>
					}
				}
				@if (page < totalPages) {
					<li class="number"> <a class="pgLnk" href="?page=@(totalPages)" title="@(page+1)">>></a> </li>
				}
			</ul>
			</nav>
			
		</div>
	}
	<div class="line_bottom"></div>
	<script>

	</script>
</div>
