@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using Umbraco.Web


@*
    This snippet displays a list of links of the pages immediately under the top-most page in the content tree.
    This is the home page for a standard website.
    It also highlights the current active page/section in the navigation with the CSS class "current".
*@

@{ 
    var selection = Model.Content.Site().Children.Where(x => x.IsVisible()).ToArray(); 
    var currentNode = UmbracoContext.Current.PublishedContentRequest.PublishedContent;
    }

@if (selection.Length > 0)
{
    <ul class="nav navbar-nav">
        @{
            var homepage= Model.Content.AncestorsOrSelf(1).FirstOrDefault();
        }
        @foreach (var item in selection)
        {
            string active = (item.Name == currentNode.Name ? "active": "");
            bool checkShowMore = false;
            if(item.Children.Count() > 0) {
                if (item.Name == "Dịch Vụ") {
                    var subItem = item.Children;
                    foreach(var newItem in subItem) {
                        if ( currentNode != homepage) {
                            if (currentNode.Parent.Id == item.Id) {
                                active = "active";
                                break;
                            }
                        }
                    }
                    <li class="dropdown @active">
                        <a class="dropbtn" href="@item.Url">@item.Name</a>
                        <div class="dropdown-content" >
                            @{
                                foreach(var newItem in subItem) {
                                    <a href="javascript:void(0)">@newItem.Name</a>
                                }
                            }
                        </div> 
                    </li>
                }
                else {

                    var subItem = item.Children.Take(6).ToList();
                    foreach(var newItem in subItem) {
                        if ( currentNode != homepage) {
                            if (currentNode.Parent.Id == item.Id) {
                                active = "active";
                                break;
                            }
                        }
                    }
                    <li class="dropdown @active">
                        <a class="dropbtn" href="@item.Url">@item.Name</a>
                        <div class="dropdown-content" >
                            @{
                                foreach(var newItem in subItem) {
                                    <a href="@newItem.Url">@newItem.Name</a>
                                }
                                if (item.Children.Count() > 6 && !checkShowMore) {
                                    checkShowMore = true;
                                    <a href="@item.Url">Xem tất cả</a>
                                }
                            }
                        </div> 
                    </li>
                }
            }
            else {
                <li class="@active menu_navigation @(item.IsAncestorOrSelf(Model.Content) ? "current" : null)">
                    <a href="@item.Url">@item.Name</a>
                </li>
            }
        }
    </ul>
}